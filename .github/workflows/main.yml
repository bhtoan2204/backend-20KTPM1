name: Publish Docker Image

on:
  push:
    branches: [main]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'

      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/*.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'

      - name: Install NestJS CLI
        run: npm install -g @nestjs/cli

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build --if-present

      - name: Run test
        run: npm run test --if-present

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/classroom-backend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify
        run: echo ${{steps.docker_build.outputs.digest}}

  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://hcmusclassroom.azurecr.io/
        username: ${{ secrets.AzureAppService_ContainerUsername_1e954bbc656548068e607381360600f5 }}
        password: ${{ secrets.AzureAppService_ContainerPassword_d9deab2da13a4caab214a9171e73e1e7 }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: hcmusclassroom.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_1e954bbc656548068e607381360600f5 }}/classroom-backend:${{ github.sha }}
        file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'classroomhcmus'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_9959f66a8c9e472ab4fb9115ec84e1d5 }}
        images: 'hcmusclassroom.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_1e954bbc656548068e607381360600f5 }}/classroom-backend:${{ github.sha }}'
